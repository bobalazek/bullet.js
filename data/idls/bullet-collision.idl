///// Shapes /////

// http://bulletphysics.org/Bullet/BulletFull/classbtCollisionShape.html
interface btCollisionShape {
    void getAabb([Ref, Const] btTransform t, [Ref] btVector3 aabbMin, [Ref] btVector3 aabbMax);
    void getBoundingSphere([Ref] btVector3 center, float radius);
    float getAngularMotionDisc();
    float getContactBreakingThreshold(float defaultContactThresholdFactor);

    void calculateTemporalAabb(
        [Ref, Const] btTransform curTrans,
        [Ref, Const] btVector3 linvel,
        [Ref, Const] btVector3 angvel,
        float timeStep,
        [Ref] btVector3 temporalAabbMin,
        [Ref] btVector3 temporalAabbMax
    );

    boolean isPolyhedral();
    boolean isConvex2d();
    boolean isConvex();
    boolean isNonMoving();
    boolean isConcave();
    boolean isCompound();
    boolean isSoftBody();
    boolean isInfinite();

    void setLocalScaling([Ref] btVector3 scaling);
    [Const, Ref] btVector3 getLocalScaling();

    void calculateLocalInertia(float mass, [Ref] btVector3 inertia);

    [Const] DOMString getName();
    long getShapeType();

    [Value] btVector3 getAnisotropicRollingFrictionDirection();

    void setMargin(float margin);
    float getMargin();
};